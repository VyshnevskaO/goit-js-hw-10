{"version":3,"file":"commonHelpers.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from \"flatpickr\";\nimport \"flatpickr/dist/flatpickr.min.css\"\n\nconst startBtn = document.querySelector(\".timer-btn\");\nconst dateInput = document.querySelector(\"#datetime-picker\");\nconst display = document.querySelectorAll(\".value\");\nconst transformedDisplay = [...display];\n\n  // Number of milliseconds per unit of time\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n\nstartBtn.addEventListener(\"click\", onStartClick);\n\n\nlet userSelectedDate;\nlet msSelected;\nlet dateObj = {};\nlet delta;\n\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n    onClose(selectedDates) {\n        if (selectedDates[0] < new Date()) {\n            startBtn.disabled = true;\n            alert(\"Please choose a date in the future\");\n           \n        } else {\n            startBtn.disabled = false;\n            userSelectedDate = selectedDates[0];\n            msSelected = userSelectedDate.getTime();\n      }\n  },\n}; \n\nflatpickr(dateInput, options); \n\n\n\nfunction convertMs(ms) {\n  // Remaining days\n  const days = Math.floor(ms / day);\n  // Remaining hours\n  const hours = Math.floor((ms % day) / hour);\n  // Remaining minutes\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  // Remaining seconds\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  dateObj = { days, hours, minutes, seconds };\n    \n}\n\n// function addLeadingZero({ days, hours, minutes, seconds }) {\n//     const date = new Date();\n//     dateObj.daysLeft = date.getDate() - days;\n//     dateObj.hoursLeft = date.getHours() - hours;\n//     dateObj.minutesLeft = date.getMinutes() - minutes;\n//     dateObj.secondsLeft = date.getSeconds() - seconds;\n//      dateObj = { daysLeft, hoursLeft, minutesLeft, secondsLeft };\n// }\n\n\n\nfunction onStartClick() {\n\n     setInterval(() => {\n        \n            const date = new Date();\n            const dataMs = date.getTime();\n            delta = Math.abs(dataMs - msSelected);\n            \n        convertMs(delta);\n        // addLeadingZero(dateObj)\n        display[0].textContent = `${dateObj.days}`;\n        display[1].textContent = `${dateObj.hours}`;\n        display[2].textContent = `${dateObj.minutes}`;\n        display[3].textContent = `${dateObj.seconds}`;\n    }, 1000)\n\n}\n\n"],"names":["startBtn","dateInput","display","second","minute","hour","day","onStartClick","userSelectedDate","msSelected","dateObj","delta","options","selectedDates","flatpickr","convertMs","ms","days","hours","minutes","seconds","dataMs"],"mappings":"wIAGA,MAAMA,EAAW,SAAS,cAAc,YAAY,EAC9CC,EAAY,SAAS,cAAc,kBAAkB,EACrDC,EAAU,SAAS,iBAAiB,QAAQ,EACvB,CAAC,GAAGA,CAAO,EAGpC,MAAMC,EAAS,IACTC,EAASD,EAAS,GAClBE,EAAOD,EAAS,GAChBE,EAAMD,EAAO,GAGrBL,EAAS,iBAAiB,QAASO,CAAY,EAG/C,IAAIC,EACAC,EACAC,EAAU,CAAA,EACVC,EAEJ,MAAMC,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACf,QAAQC,EAAe,CACfA,EAAc,CAAC,EAAI,IAAI,MACvBb,EAAS,SAAW,GACpB,MAAM,oCAAoC,IAG1CA,EAAS,SAAW,GACpBQ,EAAmBK,EAAc,CAAC,EAClCJ,EAAaD,EAAiB,UAEvC,CACH,EAEAM,EAAUb,EAAWW,CAAO,EAI5B,SAASG,EAAUC,EAAI,CAErB,MAAMC,EAAO,KAAK,MAAMD,EAAKV,CAAG,EAE1BY,EAAQ,KAAK,MAAOF,EAAKV,EAAOD,CAAI,EAEpCc,EAAU,KAAK,MAAQH,EAAKV,EAAOD,EAAQD,CAAM,EAEjDgB,EAAU,KAAK,MAASJ,EAAKV,EAAOD,EAAQD,EAAUD,CAAM,EAElEO,EAAU,CAAE,KAAAO,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CAE3C,CAaA,SAASb,GAAe,CAEnB,YAAY,IAAM,CAGX,MAAMc,EADO,IAAI,OACG,UACpBV,EAAQ,KAAK,IAAIU,EAASZ,CAAU,EAExCM,EAAUJ,CAAK,EAEfT,EAAQ,CAAC,EAAE,YAAc,GAAGQ,EAAQ,IAAI,GACxCR,EAAQ,CAAC,EAAE,YAAc,GAAGQ,EAAQ,KAAK,GACzCR,EAAQ,CAAC,EAAE,YAAc,GAAGQ,EAAQ,OAAO,GAC3CR,EAAQ,CAAC,EAAE,YAAc,GAAGQ,EAAQ,OAAO,EAC9C,EAAE,GAAI,CAEX"}